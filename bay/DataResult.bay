/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2018-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.ORM.PostgreSQL;

use Runtime.CoreObject;


class DataResult extends CoreObject
{
	
	protected var cursor = null;
	
	
	/**
	 * Constructor
	 */
	public void constructor(var cursor)
	{
		parent();
		this.cursor = cursor;
	}
	
	
	
	/**
	 * Fetch one line
	 */
	async primitive fetch()
	{
		Dict res = null;
		
		#switch
		#case ifcode PHP then
		$res = $this->cursor->fetch(\PDO::FETCH_ASSOC);
		if ($res == null) return null;
		$res = \Runtime\Dict::from( $res );
		#endswitch
		
		return res;
	}
	
	
	
	/**
	 * Fetch one line
	 */
	async Collection<primitive> fetchAll()
	{
		Collection<primitive> res = null;
		
		#switch
		#case ifcode PHP then
		$arr = $this->cursor->fetchAll(\PDO::FETCH_ASSOC);
		if ($arr == null) return new \Runtime\Collection();
		foreach ($arr as $key => $item)
		{
			$new_item = \Runtime\Dict::from($item);
			$arr[$key] = $new_item;
		}
		$res = \Runtime\Collection::from( $arr );
		#endswitch
		
		return res;
	}
	
	
	
	/**
	 * Release connection
	 */
	async void release()
	{
		#switch
		#case ifcode PHP then
		$this->cursor->closeCursor();
		#endswitch
		this.cursor = null;
	}
	
}